import os
from time import sleep


def clear_screen():
    # Check the operating system and run the appropriate command
    if os.name == 'nt':  # For Windows
        os.system('cls')
    else:  # For macOS and Linux
        os.system('clear')


def init_aws_manager():
    print('Initializing AWS Manager', end='')
    iteration = 0
    while iteration < 10:
        sleep(0.25)
        print('.', end='')
        iteration += 1
    print('')
    print('LOADED!')
    sleep(1)
    clear_screen()


def ask_credentials() -> int:
    clear_screen()
    choice = -1
    while choice < 0:
        print('Load your credentials:')
        print('[1] - Credentials file (inside ~/.aws/credentials).')
        print('[2] - Typing it manually (key-id AND access-key).')
        print('[0] - Escape this script.')
        print('')

        try:
            choice = int(input('Your choice: '))
        except ValueError:
            choice = -1
            print('Please type an integer from 0 to 2.')
            sleep(3)
        except Exception as e:
            return e

        if choice == 0:
            exit(0)
        elif choice < 0 or choice > 2:
            choice = -1
        else:
            pass

    return choice


def ask_config() -> int:
    clear_screen()
    choice = -1
    while choice < 0:
        print('Load your configs:')
        print('[1] - Config file (inside ~/.aws/config) generated by AWS CLI.')
        print('[2] - Typing it manually (region AND output format).')
        print('[3] - Use defaults.')
        print('[0] - Escape this script.')
        print('')

        try:
            choice = int(input('Your choice: '))
        except ValueError:
            choice = -1
            print('Please type an integer from 0 to 3.')
            sleep(3)
        except Exception as e:
            return e

        if choice == 0:
            exit(0)
        elif choice < 0 or choice > 3:
            choice = -1
        else:
            pass

    return choice


def ask_aws_service() -> str:
    clear_screen()
    choice = -1
    choice_str = ''
    while choice < 0:
        print('Choose the AWS service:')
        print('[1] - EC2 Instances.')
        print('[0] - Escape this script.')
        print('')

        try:
            choice = int(input('Your choice: '))
        except ValueError:
            choice = -1
            print('Please type an integer from 0 to 1.')
            sleep(3)
        except Exception as e:
            return e

        if choice == 0:
            exit(0)
        elif choice < 0 or choice > 1:
            choice = -1
            clear_screen()
        elif choice == 1:
            choice_str = str('ec2')
        else:
            pass

    return choice_str


def ask_ec2_action() -> str:
    clear_screen()
    choice = -1
    while choice < 0:
        print('Load your configs:')
        print('[1] - Describe instances. ### UNDER DEVELOPMENT ###')
        print('[2] - Monitor instance. ### UNDER DEVELOPMENT ###')
        print('[3] - Unmonitor instance. ### UNDER DEVELOPMENT ###')
        print('[4] - Start instance.')
        print('[5] - Stop instance.')
        print('[6] - Reboot instance. ### UNDER DEVELOPMENT ###')
        print('[7] - Retrieve instance status.')
        print('[0] - Escape this script.')
        print('')

        try:
            choice = int(input('Your choice: '))
        except ValueError:
            choice = -1
            print('Please type an integer from 0 to 7.')
            sleep(3)
        except Exception as e:
            return e

        if choice == 0:
            exit(0)
        elif choice < 0 or choice > 7:
            choice = -1
        else:
            pass

    if choice == 4:
        choice = 'start'
    elif choice == 5:
        choice = 'stop'
    elif choice == 7:
        choice = 'instance_status'

    return choice


def ask_ec2_id(instances: list) -> tuple:
    clear_screen()
    print('Please choose an instance to manage: ')
    choice = -1

    instances_info = ()

    total_instances = 1
    for instance in instances:
        instances_info = instances_info + ([total_instances,
                                            instance['AmiLaunchIndex'],
                                            instance['KeyName'],
                                            instance['InstanceId']],)
        total_instances += 1

    while choice < 0 or choice > total_instances:

        for instance_info_list in instances_info:
            print(f"[{instance_info_list[0]}] - Name: {instance_info_list[2]} - InstanceID: {instance_info_list[3]}")
        print("[0] - Escape this script.")
        try:
            choice = int(input('Your choice: '))
        except ValueError:
            choice = -1
            print(f"Please type an integer from 0 to {total_instances}.")
            sleep(3)
        except Exception as e:
            return e

        if choice == 0:
            exit(0)
        elif choice < 0 or choice > total_instances:
            choice = -1
        else:
            pass
    # Return a list containing [Index, name and InstanceID].
    return instances_info[choice - 1][1], instances_info[choice - 1][2], instances_info[choice - 1][3]
